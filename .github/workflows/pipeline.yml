name: CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  release:
    types: [created]

jobs:
  build-test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: pytest

  deploy-staging:
    needs: build-test
    if: github.ref_name == 'staging'
    runs-on: self-hosted
    steps:
      - name: Deploy to Staging
        run: echo "Deploying to staging..."
        env:
          STAGING_SECRET: ${{ secrets.STAGING_SECRET }}

  deploy-production:
    needs: build-test
    if: github.ref_name == 'main'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-54-188-9-224.us-west-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Deploy and Setup EC2
        run: |
          ssh ubuntu@ec2-54-188-9-224.us-west-2.compute.amazonaws.com << 'EOF'
            set -e

            echo "Updating system packages..."
            sudo apt update && sudo apt install -y python3 python3-pip git curl build-essential

            echo "Entering project directory..."
            cd ~/flask-app || git clone https://github.com/${{ github.repository }} ~/flask-app && cd ~/flask-app
            git pull origin main

            echo "Setting up Python environment..."
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "Stopping Gunicorn if running..."
            pkill gunicorn || true

            echo " Checking if app is down before restart..."
            if ! curl --silent --fail http://localhost:5000/; then
              echo " App not reachable. Safe to restart."
            else
              echo "App still reachable, continuing deployment anyway."
            fi

            echo "Starting Gunicorn..."
            nohup venv/bin/gunicorn app:app --bind 0.0.0.0:5000 > logs.txt 2>&1 &

            echo " Waiting for app to start..."
            sleep 5

            echo "Health check:"
            curl --fail http://localhost:5000/ || echo "‚ùå App not responding"

            echo "üìÑ Last 10 lines of log:"
            tail -n 10 logs.txt || echo "No logs found."
          EOF
        env:
          PROD_SECRET: ${{ secrets.PROD_SECRET }}
