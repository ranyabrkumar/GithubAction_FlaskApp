name: CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  release:
    types: [created]

jobs:
  build-test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: pytest

  deploy-staging:
    needs: build-test
    if: github.ref_name == 'staging' and github.event_name == 'push'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-54-188-9-224.us-west-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Deploy to Staging EC2
        run: |
          ssh ubuntu@ec2-54-188-9-224.us-west-2.compute.amazonaws.com << 'EOF'
            set -e

            echo "Updating system packages..."
            sudo apt update && sudo apt install -y python3 python3-pip git curl build-essential

            echo "Cloning staging branch..."
            rm -rf GithubAction_FlaskApp || true
            git clone -b staging https://github.com/ranyabrkumar/GithubAction_FlaskApp.git
            cd GithubAction_FlaskApp

            echo "Setting up virtual environment..."
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "Stopping existing Flask app..."
            pkill -f app.py || true

            echo "Starting Flask app on port 6000..."
            nohup venv/bin/python app.py > logs.txt 2>&1 &

            echo "Waiting for app to start..."
            sleep 5
            curl --fail http://localhost:6000/ || echo "App not responding"
            tail -n 10 logs.txt || echo "No logs found."
          EOF
        env:
          STAGING_SECRET: ${{ secrets.STAGING_SECRET }}

  deploy-production:
    needs: build-test
    if: github.event_name == 'release' or github.event_name == 'push'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ec2-54-188-9-224.us-west-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Deploy to Production EC2
        run: |
          ssh ubuntu@ec2-54-188-9-224.us-west-2.compute.amazonaws.com << 'EOF'
            set -e

            echo "Updating system packages..."
            sudo apt update && sudo apt install -y python3 python3-pip git curl build-essential

            echo "Cloning production branch..."
            rm -rf GithubAction_FlaskApp || true
            git clone https://github.com/ranyabrkumar/GithubAction_FlaskApp.git
            cd GithubAction_FlaskApp

            echo "Setting up virtual environment..."
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "Stopping existing Gunicorn process..."
            pkill gunicorn || true

            echo "Starting Gunicorn on port 5000..."
            nohup venv/bin/gunicorn app:app --bind 0.0.0.0:5000 > logs.txt 2>&1 &

            echo "Waiting for app to start..."
            sleep 5
            curl --fail http://localhost:5000/ || echo "App not responding"
            tail -n 10 logs.txt || echo "No logs found."
          EOF
        env:
          PROD_SECRET: ${{ secrets.PROD_SECRET }}
